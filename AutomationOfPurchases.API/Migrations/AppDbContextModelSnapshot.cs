// <auto-generated />
using System;
using AutomationOfPurchases.API;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AutomationOfPurchases.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AutomationOfPurchases.Shared.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("AutomationOfPurchases.Shared.Models.DeliveryRequest", b =>
                {
                    b.Property<int>("DeliveryRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DeliveryRequestId"));

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<string>("OrderedById")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int?>("RequestItemId")
                        .HasColumnType("integer");

                    b.Property<string>("Warehouse")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DeliveryRequestId");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderedById");

                    b.HasIndex("RequestItemId");

                    b.ToTable("DeliveryRequests");
                });

            modelBuilder.Entity("AutomationOfPurchases.Shared.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FreeCapital")
                        .HasColumnType("integer");

                    b.Property<string>("HeadOfDepartmentId")
                        .HasColumnType("text");

                    b.HasKey("DepartmentId");

                    b.HasIndex("HeadOfDepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("AutomationOfPurchases.Shared.Models.DepartmentEconomist", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("EconomistId")
                        .HasColumnType("text");

                    b.HasKey("DepartmentId", "EconomistId");

                    b.HasIndex("EconomistId");

                    b.ToTable("DepartmentEconomists");
                });

            modelBuilder.Entity("AutomationOfPurchases.Shared.Models.GeneralNeedsList", b =>
                {
                    b.Property<int>("ListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ListId"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("NullificationDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ListId");

                    b.ToTable("GeneralNeedsLists");
                });

            modelBuilder.Entity("AutomationOfPurchases.Shared.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ItemId"));

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StorageUnit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ItemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("AutomationOfPurchases.Shared.Models.NetNeedsList", b =>
                {
                    b.Property<int>("ListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ListId"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("NullificationDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ListId");

                    b.ToTable("NetNeedsLists");
                });

            modelBuilder.Entity("AutomationOfPurchases.Shared.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NotificationId"));

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsRead")
                        .HasColumnType("boolean");

                    b.Property<string>("LinkUrl")
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("RecipientId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("RequestId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("NotificationId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("AutomationOfPurchases.Shared.Models.Request", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RequestId"));

                    b.Property<bool>("ApprovedByDepartmentHead")
                        .HasColumnType("boolean");

                    b.Property<bool>("ApprovedByEconomist")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DepartmentHeadApproverId")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EconomistApproverId")
                        .HasColumnType("text");

                    b.Property<string>("OrderedById")
                        .HasColumnType("text");

                    b.Property<string>("RejectedByUserId")
                        .HasColumnType("text");

                    b.Property<string>("RejectionReason")
                        .HasColumnType("text");

                    b.Property<bool>("ReportDepartmentHead")
                        .HasColumnType("boolean");

                    b.Property<bool>("ReportEconomist")
                        .HasColumnType("boolean");

                    b.Property<bool>("ReportRequester")
                        .HasColumnType("boolean");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RequestId");

                    b.HasIndex("DepartmentHeadApproverId");

                    b.HasIndex("EconomistApproverId");

                    b.HasIndex("OrderedById");

                    b.HasIndex("RejectedByUserId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("AutomationOfPurchases.Shared.Models.RequestItem", b =>
                {
                    b.Property<int>("RequestItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RequestItemId"));

                    b.Property<int>("DeliveredQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<string>("OrderedById")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int?>("RequestId")
                        .HasColumnType("integer");

                    b.Property<bool>("Satisfied")
                        .HasColumnType("boolean");

                    b.Property<int>("ToPurchaseQuantity")
                        .HasColumnType("integer");

                    b.HasKey("RequestItemId");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderedById");

                    b.HasIndex("RequestId");

                    b.ToTable("RequestItems");
                });

            modelBuilder.Entity("GeneralNeedsItem", b =>
                {
                    b.Property<int>("GeneralNeedsItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GeneralNeedsItemId"));

                    b.Property<int>("GeneralNeedsListId")
                        .HasColumnType("integer");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<string>("OrderedById")
                        .HasColumnType("text");

                    b.Property<int?>("OriginalRequestItemId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("GeneralNeedsItemId");

                    b.HasIndex("GeneralNeedsListId");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderedById");

                    b.HasIndex("OriginalRequestItemId");

                    b.ToTable("GeneralNeedsItems");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("NetNeedsItem", b =>
                {
                    b.Property<int>("NetNeedsItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NetNeedsItemId"));

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("NetNeedsListId")
                        .HasColumnType("integer");

                    b.Property<string>("OrderedById")
                        .HasColumnType("text");

                    b.Property<int?>("OriginalRequestItemId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("NetNeedsItemId");

                    b.HasIndex("ItemId");

                    b.HasIndex("NetNeedsListId");

                    b.HasIndex("OrderedById");

                    b.HasIndex("OriginalRequestItemId");

                    b.ToTable("NetNeedsItems");
                });

            modelBuilder.Entity("AutomationOfPurchases.Shared.Models.AppUser", b =>
                {
                    b.HasOne("AutomationOfPurchases.Shared.Models.Department", "Department")
                        .WithMany("Economists")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Department");
                });

            modelBuilder.Entity("AutomationOfPurchases.Shared.Models.DeliveryRequest", b =>
                {
                    b.HasOne("AutomationOfPurchases.Shared.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutomationOfPurchases.Shared.Models.AppUser", "OrderedBy")
                        .WithMany()
                        .HasForeignKey("OrderedById");

                    b.HasOne("AutomationOfPurchases.Shared.Models.RequestItem", "RequestItem")
                        .WithMany("DeliveryRequests")
                        .HasForeignKey("RequestItemId");

                    b.Navigation("Item");

                    b.Navigation("OrderedBy");

                    b.Navigation("RequestItem");
                });

            modelBuilder.Entity("AutomationOfPurchases.Shared.Models.Department", b =>
                {
                    b.HasOne("AutomationOfPurchases.Shared.Models.AppUser", "HeadOfDepartment")
                        .WithMany()
                        .HasForeignKey("HeadOfDepartmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("HeadOfDepartment");
                });

            modelBuilder.Entity("AutomationOfPurchases.Shared.Models.DepartmentEconomist", b =>
                {
                    b.HasOne("AutomationOfPurchases.Shared.Models.Department", "Department")
                        .WithMany("DepartmentEconomists")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutomationOfPurchases.Shared.Models.AppUser", "Economist")
                        .WithMany("DepartmentEconomists")
                        .HasForeignKey("EconomistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Economist");
                });

            modelBuilder.Entity("AutomationOfPurchases.Shared.Models.Request", b =>
                {
                    b.HasOne("AutomationOfPurchases.Shared.Models.AppUser", "DepartmentHeadApprover")
                        .WithMany()
                        .HasForeignKey("DepartmentHeadApproverId");

                    b.HasOne("AutomationOfPurchases.Shared.Models.AppUser", "EconomistApprover")
                        .WithMany()
                        .HasForeignKey("EconomistApproverId");

                    b.HasOne("AutomationOfPurchases.Shared.Models.AppUser", "OrderedBy")
                        .WithMany()
                        .HasForeignKey("OrderedById");

                    b.HasOne("AutomationOfPurchases.Shared.Models.AppUser", "RejectedByUser")
                        .WithMany()
                        .HasForeignKey("RejectedByUserId");

                    b.Navigation("DepartmentHeadApprover");

                    b.Navigation("EconomistApprover");

                    b.Navigation("OrderedBy");

                    b.Navigation("RejectedByUser");
                });

            modelBuilder.Entity("AutomationOfPurchases.Shared.Models.RequestItem", b =>
                {
                    b.HasOne("AutomationOfPurchases.Shared.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutomationOfPurchases.Shared.Models.AppUser", "OrderedBy")
                        .WithMany()
                        .HasForeignKey("OrderedById");

                    b.HasOne("AutomationOfPurchases.Shared.Models.Request", "Request")
                        .WithMany("Items")
                        .HasForeignKey("RequestId");

                    b.Navigation("Item");

                    b.Navigation("OrderedBy");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("GeneralNeedsItem", b =>
                {
                    b.HasOne("AutomationOfPurchases.Shared.Models.GeneralNeedsList", "List")
                        .WithMany("Items")
                        .HasForeignKey("GeneralNeedsListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutomationOfPurchases.Shared.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutomationOfPurchases.Shared.Models.AppUser", "OrderedBy")
                        .WithMany()
                        .HasForeignKey("OrderedById");

                    b.HasOne("AutomationOfPurchases.Shared.Models.RequestItem", "OriginalRequestItem")
                        .WithMany()
                        .HasForeignKey("OriginalRequestItemId");

                    b.Navigation("Item");

                    b.Navigation("List");

                    b.Navigation("OrderedBy");

                    b.Navigation("OriginalRequestItem");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AutomationOfPurchases.Shared.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AutomationOfPurchases.Shared.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutomationOfPurchases.Shared.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AutomationOfPurchases.Shared.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NetNeedsItem", b =>
                {
                    b.HasOne("AutomationOfPurchases.Shared.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutomationOfPurchases.Shared.Models.NetNeedsList", "List")
                        .WithMany("Items")
                        .HasForeignKey("NetNeedsListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutomationOfPurchases.Shared.Models.AppUser", "OrderedBy")
                        .WithMany()
                        .HasForeignKey("OrderedById");

                    b.HasOne("AutomationOfPurchases.Shared.Models.RequestItem", "OriginalRequestItem")
                        .WithMany()
                        .HasForeignKey("OriginalRequestItemId");

                    b.Navigation("Item");

                    b.Navigation("List");

                    b.Navigation("OrderedBy");

                    b.Navigation("OriginalRequestItem");
                });

            modelBuilder.Entity("AutomationOfPurchases.Shared.Models.AppUser", b =>
                {
                    b.Navigation("DepartmentEconomists");
                });

            modelBuilder.Entity("AutomationOfPurchases.Shared.Models.Department", b =>
                {
                    b.Navigation("DepartmentEconomists");

                    b.Navigation("Economists");
                });

            modelBuilder.Entity("AutomationOfPurchases.Shared.Models.GeneralNeedsList", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("AutomationOfPurchases.Shared.Models.NetNeedsList", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("AutomationOfPurchases.Shared.Models.Request", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("AutomationOfPurchases.Shared.Models.RequestItem", b =>
                {
                    b.Navigation("DeliveryRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
